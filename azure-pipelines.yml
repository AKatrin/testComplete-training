# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- testcomplete

stages:
  
- stage: TestComplete
  displayName: TestComplete-Logs
  jobs:
  - job: TestComplete
    displayName: TestComplete
    pool:
      name: localhosttc
    steps:
    - script: |
        "C:\Program Files (x86)\SmartBear\TestExecute 15\Bin\TestExecute.exe" "$(System.DefaultWorkingDirectory)\testcomplete-training\testcomplete-training.pjs" /r /ns /SilentMode /exit /DoNotShowLog /ExportLog:"$(System.DefaultWorkingDirectory)\report\index.html"
        dir
      displayName: 'Run tests using TestExecute.exe'
    # - task: install@1
    #   inputs:
    #     version: '16.3.1'
    - task: deploy@1
      inputs:
        authToken: '$(TestinAzurePipeline)'
        siteId: 'ccefa6dd-202d-49e8-99e7-559752fd809c'
        sourceDirectory: '$(System.DefaultWorkingDirectory)\report'
        isValidationOnly: false
        message: 'Build from Azure $(Build.BuildId)'
    - script: |
        echo https://delicate-gelato-ec89ad.netlify.app
      displayName: 'Print TestComplete Report'
    - powershell: |
        Write-Host "##vso[task.uploadsummary]$(System.DefaultWorkingDirectory)\TestCompleteReport.md"
      displayName: 'Show TestComplete Report'
    # - task: PublishHtmlReport@1
    #   inputs:
    #     tabName: 'TestComplete'
    #     reportDir: '$(Build.SourcesDirectory)/$(Build.BuildId)/report/index.html'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)\Log'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Create TestComplete Result Artifact'
      condition: always()
      name: 'archive'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifactName: 'testCompleteResult'
      displayName: 'Publish TestComplete Result Artifact'
      condition: always()
      name: 'publish'